#BlueJ class context
comment0.params=nazev\ popis
comment0.target=Prostor(java.lang.String,\ java.lang.String)
comment0.text=\r\n\ Vytvo\u0159en\u00ED\ prostoru\ se\ zadan\u00FDm\ popisem,\ nap\u0159.\ "kuchy\u0148",\ "hala",\ "tr\u00E1vn\u00EDk\r\n\ p\u0159ed\ domem"\r\n\r\n\ @param\ nazev\ nazev\ prostoru,\ jednozna\u010Dn\u00FD\ identifik\u00E1tor,\ jedno\ slovo\ nebo\r\n\ v\u00EDceslovn\u00FD\ n\u00E1zev\ bez\ mezer.\r\n\ @param\ popis\ Popis\ prostoru.\r\n
comment1.params=vedlejsi
comment1.target=void\ setVychod(Prostor)
comment1.text=\r\n\ Definuje\ v\u00FDchod\ z\ prostoru\ (sousedn\u00ED/vedlejsi\ prostor).\ Vzhledem\ k\ tomu,\r\n\ \u017Ee\ je\ pou\u017Eit\ Set\ pro\ ulo\u017Een\u00ED\ v\u00FDchod\u016F,\ m\u016F\u017Ee\ b\u00FDt\ sousedn\u00ED\ prostor\ uveden\r\n\ pouze\ jednou\ (tj.\ nelze\ m\u00EDt\ dvoje\ dve\u0159e\ do\ stejn\u00E9\ sousedn\u00ED\ m\u00EDstnosti).\r\n\ Druh\u00E9\ zad\u00E1n\u00ED\ stejn\u00E9ho\ prostoru\ ti\u0161e\ p\u0159ep\u00ED\u0161e\ p\u0159edchoz\u00ED\ zad\u00E1n\u00ED\ (neobjev\u00ED\ se\r\n\ \u017E\u00E1dn\u00E9\ chybov\u00E9\ hl\u00E1\u0161en\u00ED).\ Lze\ zadat\ t\u00E9\u017E\ cestu\ ze\ do\ sebe\ sama.\r\n\r\n\ @param\ vedlejsi\ prostor,\ kter\u00FD\ sousedi\ s\ aktualnim\ prostorem.\r\n\r\n
comment10.params=
comment10.target=java.lang.String\ getOtazka()
comment11.params=
comment11.target=java.lang.String\ getOdpoved()
comment12.params=
comment12.target=boolean\ sOtazkou()
comment13.params=neco
comment13.target=void\ vlozVec(Vec)
comment13.text=\r\n\ vlo\u017E\u00ED\ v\u011Bc\ do\ m\u00EDstnosti\r\n
comment14.params=nazev
comment14.target=boolean\ obsahujeVec(java.lang.String)
comment14.text=\r\n\ zjist\u00ED\ zda\ je\ v\ m\u00EDstnosti\ dan\u00E1\ v\u011Bc,\r\n\ kdy\u017E\ nen\u00ED\ v\ m\u00EDstnosti\ prohled\u00E1\ v\u011Bci\ jestli\ neukr\u00FDvaj\u00ED\ dal\u0161\u00ED\ v\u011Bci\ (v\ truhle(sarkof\u00E1g))\r\n
comment15.params=nazev
comment15.target=Vec\ vyberVec(java.lang.String)
comment15.text=\r\n\ nejd\u0159\u00EDve\ zjist\u00ED\ zda\ je\ v\u011Bz\ v\ m\u00EDstnosti,\ pokud\ v\ m\u00EDstnosti\ je(nen\u00ED\ null)\ a\ je\ prenositelna,\ tak\ vybere\ vec\ a\ odebere\ ji\ z\ m\u00EDstnosti,\r\n\ pokud\ v\u011Bc\ nen\u00ED\ v\ m\u00EDstnosti,\ pak\ se\ prohled\u00E1j\u00ED\ v\u011Bci\ jestli\ neobsahuj\u00ED\ dal\u0161\u00ED\ (sarkof\u00E1g\ obsahuje\ kop\u00ED)\r\n
comment16.params=nazev
comment16.target=Vec\ najdiVecVeVeci(java.lang.String)
comment16.text=\r\n\ hled\u00E1\ v\u011Bc\ v\ dal\u0161\u00ED\ v\u011Bci,\ pokud\ v\ t\u00E9\ v\u011Bci\ nen\u00ED\ jin\u00E1\ v\u011Bc,\ vr\u00E1t\u00ED\ p\u016Fvodn\u00ED\ v\u011Bc\r\n
comment17.params=nazev
comment17.target=Vec\ najdiVecVMistnosti(java.lang.String)
comment17.text=\r\n\ prohled\u00E1\ seznam\ v\u011Bc\u00ED\ v\ m\u00EDstnosti,\ pokud\ najde\ schodu\ n\u00E1zv\u016F\ mezi\ hledanou\ v\u011Bc\u00ED\ a\ v\u011Bc\u00ED\ v\ m\u00EDstnosti\ ->\ vyp\u00ED\u0161e\ se\ \r\n
comment18.params=
comment18.target=java.lang.String\ seznamVeci()
comment18.text=\r\n\ vr\u00E1t\u00ED\ seznam\ v\u011Bc\u00ED,\ kter\u00E9\ jsou\ v\ m\u00EDstnosti\ \r\n
comment19.params=
comment19.target=java.lang.String\ seznamPostav()
comment19.text=\r\n\ vr\u00E1t\u00ED\ seznam\ postav\ v\ m\u00EDstosti\r\n
comment2.params=o
comment2.target=boolean\ equals(java.lang.Object)
comment2.text=\r\n\ Metoda\ equals\ pro\ porovn\u00E1n\u00ED\ dvou\ prostor\u016F.\ P\u0159ekr\u00FDv\u00E1\ se\ metoda\ equals\ ze\r\n\ t\u0159\u00EDdy\ Object.\ Dva\ prostory\ jsou\ shodn\u00E9,\ pokud\ maj\u00ED\ stejn\u00FD\ n\u00E1zev.\ Tato\r\n\ metoda\ je\ d\u016Fle\u017Eit\u00E1\ z\ hlediska\ spr\u00E1vn\u00E9ho\ fungov\u00E1n\u00ED\ seznamu\ v\u00FDchod\u016F\ (Set).\r\n\r\n\ Bli\u017E\u0161\u00ED\ popis\ metody\ equals\ je\ u\ t\u0159\u00EDdy\ Object.\r\n\r\n\ @param\ o\ object,\ kter\u00FD\ se\ m\u00E1\ porovn\u00E1vat\ s\ aktu\u00E1ln\u00EDm\r\n\ @return\ hodnotu\ true,\ pokud\ m\u00E1\ zadan\u00FD\ prostor\ stejn\u00FD\ n\u00E1zev,\ jinak\ false\r\n
comment20.params=
comment20.target=java.lang.Boolean\ jeZamcena()
comment20.text=\r\n\ vrac\u00ED\ zda\ je\ prostor\ zam\u010Den\u00FD\ nebo\ ne\r\n
comment21.params=zamceno
comment21.target=void\ zamknout(java.lang.Boolean)
comment21.text=\r\n\ nastavuje\ zam\u010Den\u00ED\ \u010Di\ odem\u010Den\u00ED\ m\u00EDstnosti\r\n
comment22.params=jmeno
comment22.target=Postava\ najdiPostavuVMistnosti(java.lang.String)
comment22.text=\r\n\ prohled\u00E1\ seznam\ postav\ v\ m\u00EDstnosti,\ pokud\ najde\ schodu\ n\u00E1zv\u016F\ mezi\ hledanou\ postavou\ a\ postavou\ v\ m\u00EDstnosti\ ->\ vyp\u00ED\u0161e\ se\ \r\n
comment23.params=jmeno
comment23.target=boolean\ obsahujePostavu(java.lang.String)
comment23.text=\r\n\ vrac\u00ED\ zda\ je\ v\ m\u00EDstnosti\ postava,\ kterou\ hled\u00E1me\r\n
comment24.params=nejaka
comment24.target=void\ vlozPostavu(Postava)
comment24.text=\r\n\ vkl\u00E1d\u00E1\ postavu\ do\ m\u00EDstnosti\r\n
comment25.params=
comment25.target=Postava\ getPostava()
comment26.params=klic
comment26.target=void\ nastavKlic(Vec)
comment26.text=\r\n\ nastavuje\ kl\u00ED\u010D,\ pro\ odem\u010Den\u00ED\ m\u00EDstnosti\r\n
comment27.params=
comment27.target=Vec\ getKlic()
comment3.params=
comment3.target=int\ hashCode()
comment3.text=\r\n\ metoda\ hashCode\ vraci\ ciselny\ identifikator\ instance,\ ktery\ se\ pouziva\r\n\ pro\ optimalizaci\ ukladani\ v\ dynamickych\ datovych\ strukturach.\ Pri\r\n\ prekryti\ metody\ equals\ je\ potreba\ prekryt\ i\ metodu\ hashCode.\ Podrobny\r\n\ popis\ pravidel\ pro\ vytvareni\ metody\ hashCode\ je\ u\ metody\ hashCode\ ve\r\n\ tride\ Object\r\n
comment4.params=
comment4.target=java.lang.String\ getNazev()
comment4.text=\r\n\ Vrac\u00ED\ n\u00E1zev\ prostoru\ (byl\ zad\u00E1n\ p\u0159i\ vytv\u00E1\u0159en\u00ED\ prostoru\ jako\ parametr\r\n\ konstruktoru)\r\n\r\n\ @return\ n\u00E1zev\ prostoru\r\n
comment5.params=
comment5.target=java.lang.String\ dlouhyPopis()
comment5.text=\r\n\ Vrac\u00ED\ "dlouh\u00FD"\ popis\ prostoru,\ kter\u00FD\ m\u016F\u017Ee\ vypadat\ n\u00E1sledovn\u011B\:\ Jsi\ v\r\n\ mistnosti/prostoru\ vstupni\ hala\ budovy\ VSE\ na\ Jiznim\ meste.\ vychody\:\r\n\ chodba\ bufet\ ucebna\r\n\r\n\ @return\ Dlouh\u00FD\ popis\ prostoru\r\n
comment6.params=
comment6.target=java.lang.String\ popisVychodu()
comment6.text=\r\n\ Vrac\u00ED\ textov\u00FD\ \u0159et\u011Bzec,\ kter\u00FD\ popisuje\ sousedn\u00ED\ v\u00FDchody,\ nap\u0159\u00EDklad\:\r\n\ "vychody\:\ hala\ ".\r\n\r\n\ @return\ Popis\ v\u00FDchod\u016F\ -\ n\u00E1zv\u016F\ sousedn\u00EDch\ prostor\u016F\r\n
comment7.params=nazevSouseda
comment7.target=Prostor\ vratSousedniProstor(java.lang.String)
comment7.text=\r\n\ Vrac\u00ED\ prostor,\ kter\u00FD\ soused\u00ED\ s\ aktu\u00E1ln\u00EDm\ prostorem\ a\ jeho\u017E\ n\u00E1zev\ je\ zad\u00E1n\r\n\ jako\ parametr.\ Pokud\ prostor\ s\ udan\u00FDm\ jm\u00E9nem\ nesoused\u00ED\ s\ aktu\u00E1ln\u00EDm\r\n\ prostorem,\ vrac\u00ED\ se\ hodnota\ null.\r\n\r\n\ @param\ nazevSouseda\ Jm\u00E9no\ sousedn\u00EDho\ prostoru\ (v\u00FDchodu)\r\n\ @return\ Prostor,\ kter\u00FD\ se\ nach\u00E1z\u00ED\ za\ p\u0159\u00EDslu\u0161n\u00FDm\ v\u00FDchodem,\ nebo\ hodnota\r\n\ null,\ pokud\ prostor\ zadan\u00E9ho\ jm\u00E9na\ nen\u00ED\ sousedem.\r\n
comment8.params=
comment8.target=java.util.Collection\ getVychody()
comment8.text=\r\n\ Vrac\u00ED\ kolekci\ obsahuj\u00EDc\u00ED\ prostory,\ se\ kter\u00FDmi\ tento\ prostor\ soused\u00ED.\r\n\ Takto\ z\u00EDskan\u00FD\ seznam\ sousedn\u00EDch\ prostor\ nelze\ upravovat\ (p\u0159id\u00E1vat,\r\n\ odeb\u00EDrat\ v\u00FDchody)\ proto\u017Ee\ z\ hlediska\ spr\u00E1vn\u00E9ho\ n\u00E1vrhu\ je\ to\ pln\u011B\r\n\ z\u00E1le\u017Eitost\u00ED\ t\u0159\u00EDdy\ Prostor.\r\n\r\n\ @return\ Nemodifikovateln\u00E1\ kolekce\ prostor\u016F\ (v\u00FDchod\u016F),\ se\ kter\u00FDmi\ tento\r\n\ prostor\ soused\u00ED.\r\n
comment9.params=otazka\ odpoved
comment9.target=void\ nastavOtazku(java.lang.String,\ java.lang.String)
comment9.text=\r\n\ nastavuje\ ot\u00E1zku\ a\ odpov\u011Bd\ pro\ p\u0159echod\ mezi\ m\u00EDstnostmi\r\n
numComments=28
